@import '../../variables';

.Item {
  position: relative;
  cursor: pointer;

  &:hover {
    background-color: color(sky, lighter);
  }
}

.Item-focused {
  box-shadow: inset rem(2px) 0 0 color(indigo);
}

.Item-selected {
  background-color: color(indigo, lighter);
}

.Link {
  position: absolute;
  z-index: resource-list-item(link-stacking-order);
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0;
}

// Item inner container
.Container {
  position: relative;
  z-index: resource-list-item(content-stacking-order);
  padding: resource-list-item(padding) spacing();
  min-height: resource-list-item(min-height);
  display: flex;
  align-items: flex-start;

  @include breakpoint-after(resource-list(breakpoint-small)) {
    padding: resource-list-item(padding) spacing(loose);
  }
}

.Owned {
  display: flex;
  align-self: flex-start;
}

// Item handle
.Handle {
  width: resource-list-item(handle-width);
  min-height: resource-list-item(min-height);
  justify-content: center;
  align-items: center;
  margin: (-1 * resource-list-item(padding)) spacing(extra-tight) (-1 * resource-list-item(padding)) resource-list-item(control-indent);
  display: flex;
}

.Item-selectable {
  width: calc(100% + resource-list-item(translate-offset));
  transform: translateX(-1 * resource-list-item(translate-offset));
  transition: transform easing() duration();
  margin-right: -1 * resource-list-item(translate-offset);

  &.Item-selectMode {
    transform: translateX(0);
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    transform: translateX(0);
    margin-right: 0;
  }
}


// Item media
// Had min-height style below instead of height. Need height for IE11 vertical centering
// to work with display: flex. Reference: http://stackoverflow.com/questions/19371626/flexbox-not-centering-vertically-in-ie
.Item-mediaAvatar {
  &.Item-sizeSmall {
    .Actions {
      height: resource-list-item(avatar-small-size);
    }
  }

  &.Item-sizeMedium {
    .Actions {
      height: resource-list-item(avatar-medium-size);
    }
  }

  &.Item-sizeLarge {
    .Actions {
      height: resource-list-item(avatar-large-size);
    }
  }
}

.Item-mediaThumbnail {
  &.Item-sizeSmall {
    .Actions {
      height: resource-list-item(thumbnail-small-size);
    }
  }

  &.Item-sizeMedium {
    .Actions {
      height: resource-list-item(thumbnail-medium-size);
    }
  }

  &.Item-sizeLarge {
    .Actions {
      height: resource-list-item(thumbnail-large-size);
    }
  }
}

.Media {
  flex: 0 0 auto;
  margin-right: spacing(loose);
  color: inherit;
  text-decoration: none;
}

// Item content
.Content {
  @include layout-flex-fix;
  flex: 1 1 auto;
  align-self: center;
}

// Item actions
.Actions {
  position: absolute;
  right: resource-list-item(padding);
  display: none;
  pointer-events: initial;
  .Item-focused & {
      display: flex;
  }
}

.Item-persistActions {
  .Actions {
    display: flex;
    flex: 0 0 auto;
    align-items: center;
    margin-left: spacing();
    pointer-events: initial;
    position: relative;
    flex-basis: auto;

    @include page-content-when-partially-condensed {
      display: none;
    }
  }
}

.Disclosure {
  display: none;
  pointer-events: initial;

  @include page-content-when-partially-condensed {
    display: block;
  }
}
