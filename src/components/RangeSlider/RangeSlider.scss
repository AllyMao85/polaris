$stacking-order: (
  output: 10,
  input: 20,
);

$range-track-height: rem(4px);
$range-thumb-size: rem(24px);
$range-thumb-shadow: (
  0 0 0 rem(1px) rgba(black, 0.2),
  shadow(faint)
);
$range-thumb-shadow-hover: (
  0 0 0 rem(1px) rgba(black, 0.4),
  shadow(faint)
);
$range-thumb-shadow-error: 0 0 0 rem(1px) color('red');
$range-thumb-shadow-focus: 0 0 0 rem(1px) color('indigo');

@mixin range-track {
  --progress-lower: #{color('indigo')};
  --progress-upper: #{color('sky', 'dark')};
  cursor: pointer;
  width: 100%;
  height: $range-track-height;
  background-color: var(--progress-upper, color('sky', 'dark'));
  background-image: linear-gradient(
    to right,
    var(--progress-lower, transparent) 0%,
    var(--progress-lower, transparent)
      var(--Polaris-RangeSlider-progress, 0%),
    var(--progress-upper, transparent)
      var(--Polaris-RangeSlider-progress, 100%),
    var(--progress-upper, transparent) 100%
  );
  border: none;
  border-radius: $range-track-height;
}

@mixin range-track-error {
  --progress-lower: #{color('red')};
  background-color: color('red', 'light');
}

@mixin range-track-focus {
  // repeated so that `focus` can override `error`
  --progress-lower: #{color('indigo')};
  background-color: color('sky', 'dark');
}

@mixin range-track-disabled {
  cursor: auto;
  background-image: none;
}

@mixin range-thumb {
  // stylelint-disable-next-line value-no-vendor-prefix
  cursor: -webkit-grab;
  width: $range-thumb-size;
  height: $range-thumb-size;
  border: rem(1px) solid color('sky', 'lighter');
  border-radius: 50%;
  background: linear-gradient(color('white'), color('sky', 'lighter'));
  box-shadow: $range-thumb-shadow;
  appearance: none;
  transition-property: border-color, box-shadow;
  transition-duration: duration();
  transition-timing-function: easing();

  &:hover {
    background: linear-gradient(color('sky', 'lighter'), color('sky', 'light'));
    box-shadow: $range-thumb-shadow-hover;
  }
}

@mixin range-thumb-error {
  border-color: color('red');
  box-shadow: $range-thumb-shadow-error;
}

@mixin range-thumb-focus {
  background: linear-gradient(color('sky', 'lighter'), color('sky', 'light'));
  border-color: color('indigo');
  box-shadow: $range-thumb-shadow-focus;
}

@mixin range-thumb-disabled {
  cursor: not-allowed;
  border-color: color('sky', 'dark');
}

.RangeSlider {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  height: $range-thumb-size;

  &:not(:first-child) {
    margin-top: spacing(tight);
  }

  &.disabled {
    opacity: 0.8;
  }
}

.Input {
  @include unstyled-input;
  position: relative;
  z-index: z-index('input', $stacking-order);
  flex: 1 1 auto;

  ///
  /// Range track
  &::-ms-track {
    @include range-track;
  }

  &::-moz-range-track {
    @include range-track;
  }

  &::-webkit-slider-runnable-track {
    @include range-track;
  }

  ///
  /// Range thumb
  &::-ms-thumb {
    @include range-thumb;
    margin-top: 0;
    transform: translateY($range-thumb-size / 5) scale(0.4);
  }

  &::-moz-range-thumb {
    @include range-thumb;
  }

  &::-webkit-slider-thumb {
    @include range-thumb;
    margin-top: -($range-thumb-size - $range-track-height) / 2;
  }

  ///
  /// Range tooltip
  &::-ms-tooltip {
    display: none;
  }

  ///
  /// State
  .error & {
    &::-ms-track {
      @include range-track-error;
    }

    &::-moz-range-track {
      @include range-track-error;
    }

    &::-webkit-slider-runnable-track {
      @include range-track-error;
    }

    &::-ms-thumb {
      @include range-thumb-error;
    }

    &::-moz-range-thumb {
      @include range-thumb-error;
    }

    &::-webkit-slider-thumb {
      @include range-thumb-error;
    }
  }

  .disabled & {
    &::-ms-track {
      @include range-track-disabled;
    }

    &::-moz-range-track {
      @include range-track-disabled;
    }

    &::-webkit-slider-runnable-track {
      @include range-track-disabled;
    }

    &::-ms-thumb {
      @include range-thumb-disabled;
    }

    &::-moz-range-thumb {
      @include range-thumb-disabled;
    }

    &::-webkit-slider-thumb {
      @include range-thumb-disabled;
    }
  }

  // match `error` specificity for interaction styles
  // stylelint-disable selector-max-specificity
  .RangeSlider &:focus {
    &::-ms-track {
      @include range-track-focus;
    }

    &::-moz-range-track {
      @include range-track-focus;
    }

    &::-webkit-slider-runnable-track {
      @include range-track-focus;
    }

    &::-ms-thumb {
      @include range-thumb-focus;
    }

    &::-moz-range-thumb {
      @include range-thumb-focus;
    }

    &::-webkit-slider-thumb {
      @include range-thumb-focus;
    }
  }
  // stylelint-enable selector-max-specificity
}

///
/// Output value indicator
$range-output-size: rem(32px);
$range-output-tip-size: rem(8px);
$range-output-translate-x: calc(
  -50% + var(--Polaris-RangeSlider-output-factor, 0) * #{$range-thumb-size}
);

.Output {
  position: absolute;
  z-index: z-index('output', $stacking-order);
  bottom: $range-output-size - $range-output-tip-size;
  left: var(--Polaris-RangeSlider-progress, 50%);
  transform: translateX($range-output-translate-x);
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition-property: opacity, visibility;
  transition-duration: duration();
  transition-timing-function: easing();

  .Input:hover + &,
  .Input:active + &,
  .Input:focus + & {
    opacity: 1;
    visibility: visible;
  }
}

.OutputBubble {
  position: relative;
  display: flex;
  padding: 0 spacing(tight);
  min-width: $range-output-size;
  height: $range-output-size;
  background-color: color('ink');
  border-radius: border-radius();
  transition-property: transform;
  transition-duration: duration();
  transition-timing-function: easing();

  &::before {
    content: '';
    position: absolute;
    bottom: -($range-output-tip-size - rem(1px));
    left: 50%;
    margin-left: -$range-output-tip-size;
    display: block;
    width: 0;
    height: 0;
    border-left: $range-output-tip-size solid transparent;
    border-right: $range-output-tip-size solid transparent;
    border-top: $range-output-tip-size solid color('ink');
  }

  // stylelint-disable selector-max-specificity
  .Input:hover + .Output &,
  .Input:active + .Output &,
  .Input:focus + .Output & {
    transform: translateY(-$range-thumb-size);

    @include page-content-when-not-partially-condensed {
      transform: translateY(-($range-thumb-size / 2));
    }
  }
  // stylelint-enable selector-max-specificity
}

.OutputText {
  @include text-style-subheading;
  display: block;
  flex: 1 1 auto;
  margin: auto;
  text-align: center;
  color: color('white');
}
